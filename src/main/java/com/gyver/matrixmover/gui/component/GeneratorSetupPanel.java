/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GeneratorSetupPanel.java
 *
 * Created on 08.11.2012, 20:25:26
 */
package com.gyver.matrixmover.gui.component;

/**
 *
 * @author Jonas
 */
public class GeneratorSetupPanel extends javax.swing.JPanel {

    /** Creates new form GeneratorSetupPanel */
    public GeneratorSetupPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        cbGenerator = new javax.swing.JComboBox();
        bConfigGenerator = new javax.swing.JButton();
        cbEffect = new javax.swing.JComboBox();
        bConfigEffect = new javax.swing.JButton();
        sIntensity = new javax.swing.JSlider();
        jLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbMixer = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(32767, 160));
        setMinimumSize(new java.awt.Dimension(10, 160));
        setPreferredSize(new java.awt.Dimension(300, 160));
        setRequestFocusEnabled(false);
        setLayout(new java.awt.GridBagLayout());

        cbGenerator.setFont(new java.awt.Font("Dialog", 0, 12));
        cbGenerator.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbGenerator.setMinimumSize(new java.awt.Dimension(80, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        add(cbGenerator, gridBagConstraints);

        bConfigGenerator.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        bConfigGenerator.setText("Config Generator");
        bConfigGenerator.setMaximumSize(new java.awt.Dimension(140, 25));
        bConfigGenerator.setMinimumSize(new java.awt.Dimension(140, 25));
        bConfigGenerator.setPreferredSize(new java.awt.Dimension(140, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        add(bConfigGenerator, gridBagConstraints);

        cbEffect.setFont(new java.awt.Font("Dialog", 0, 12));
        cbEffect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbEffect.setMinimumSize(new java.awt.Dimension(80, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        add(cbEffect, gridBagConstraints);

        bConfigEffect.setFont(new java.awt.Font("Dialog", 0, 12));
        bConfigEffect.setText("Config Effect");
        bConfigEffect.setMaximumSize(new java.awt.Dimension(140, 25));
        bConfigEffect.setMinimumSize(new java.awt.Dimension(140, 25));
        bConfigEffect.setPreferredSize(new java.awt.Dimension(140, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        add(bConfigEffect, gridBagConstraints);

        sIntensity.setFont(new java.awt.Font("Dialog", 0, 12));
        sIntensity.setMaximum(255);
        sIntensity.setValue(255);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        add(sIntensity, gridBagConstraints);

        jLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel.setText("Effect Generator:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel2.setText("Mixer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel2, gridBagConstraints);

        cbMixer.setFont(new java.awt.Font("Dialog", 0, 12));
        cbMixer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbMixer.setMinimumSize(new java.awt.Dimension(80, 20));
        cbMixer.setOpaque(false);
        cbMixer.setPreferredSize(new java.awt.Dimension(155, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        add(cbMixer, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel3.setText("Effect");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel3, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bConfigEffect;
    private javax.swing.JButton bConfigGenerator;
    private javax.swing.JComboBox cbEffect;
    private javax.swing.JComboBox cbGenerator;
    private javax.swing.JComboBox cbMixer;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSlider sIntensity;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the bConfigEffect
     */
    public javax.swing.JButton getbConfigEffect() {
        return bConfigEffect;
    }

    /**
     * @param bConfigEffect the bConfigEffect to set
     */
    public void setbConfigEffect(javax.swing.JButton bConfigEffect) {
        this.bConfigEffect = bConfigEffect;
    }

    /**
     * @return the bConfigGenerator
     */
    public javax.swing.JButton getbConfigGenerator() {
        return bConfigGenerator;
    }

    /**
     * @param bConfigGenerator the bConfigGenerator to set
     */
    public void setbConfigGenerator(javax.swing.JButton bConfigGenerator) {
        this.bConfigGenerator = bConfigGenerator;
    }

    /**
     * @return the cbEffect
     */
    public javax.swing.JComboBox getCbEffect() {
        return cbEffect;
    }

    /**
     * @param cbEffect the cbEffect to set
     */
    public void setCbEffect(javax.swing.JComboBox cbEffect) {
        this.cbEffect = cbEffect;
    }

    /**
     * @return the cbGenerator
     */
    public javax.swing.JComboBox getCbGenerator() {
        return cbGenerator;
    }

    /**
     * @param cbGenerator the cbGenerator to set
     */
    public void setCbGenerator(javax.swing.JComboBox cbGenerator) {
        this.cbGenerator = cbGenerator;
    }

    /**
     * @return the cbMixer
     */
    public javax.swing.JComboBox getCbMixer() {
        return cbMixer;
    }

    /**
     * @param cbMixer the cbMixer to set
     */
    public void setCbMixer(javax.swing.JComboBox cbMixer) {
        this.cbMixer = cbMixer;
    }

    /**
     * @return the sIntensity
     */
    public javax.swing.JSlider getsIntensity() {
        return sIntensity;
    }

    /**
     * @param sIntensity the sIntensity to set
     */
    public void setsIntensity(javax.swing.JSlider sIntensity) {
        this.sIntensity = sIntensity;
    }
}
