#
# Copyright (C) 2012 Gyver
#
# This file is part of MatrixMover.
#
# MatrixMover is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# MatrixMover is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with MatrixMover. If not, see <http://www.gnu.org/licenses/>.
#

#=========================
# SAVED SCENES
#=========================
# Directory containing the saved scenes
scenes.dir = scenes


#=========================
# DISPLAY SETTINGS 
#=========================

# Size of the pixel visuals.
# As the matrix display is rezised, only the ration between 
# width and height is used. Pixel space is fixed!
display.pixel.size.width=1
display.pixel.size.height=1
display.pixel.space=1


#=========================
# OUTPUT SETTINGS 
#=========================

# Frames per second
output.fps=25

# Set ONE output device (null, artnet)
output.device=artnet

#=========================
# OUTPUT DIMENSIONS
#=========================
output.resolution.width=9
output.resolution.height=9

#=========================
# OUTPUT MAPPING
#=========================
# Mapping is applied pixel wise. Do not point to outside matrix.
# Mapping overlays default mapping (horizontal from left top to
# right bottom). Begin with 0 to the number of pixels of your
# matrix minus 1. Devide numbers by ','
#output.mapping=0,1,2,9,10,11,18,19,20,81,82,83,90,91,92,99,100,101,3,4,5,12,13,14,21,22,23,84,85,86,93,94,95,102,103,104,6,7,8,15,16,17,24,25,26,87,88,89,96,97,98,105,106,107,27,28,29,36,37,38,45,46,47,108,109,110,117,118,119,126,127,128,30,31,32,39,40,41,48,49,50,111,112,113,120,121,122,129,130,131,33,34,35,42,43,44,51,52,53,114,115,116,123,124,125,132,133,134,54,55,56,63,64,65,72,73,74,135,136,137,144,145,146,153,154,155,57,58,59,66,67,68,75,76,77,138,139,140,147,148,149,156,157,158,60,61,62,69,70,71,78,79,80,141,142,143,150,151,152,159,160,161
output.mapping=0,1,2,9,10,11,18,19,20,3,4,5,12,13,14,21,22,23,6,7,8,15,16,17,24,25,26,27,28,29,36,37,38,45,46,47,30,31,32,39,40,41,48,49,50,33,34,35,42,43,44,51,52,53,54,55,56,63,64,65,72,73,74,57,58,59,66,67,68,75,76,77,60,61,62,69,70,71,78,79,80

# Define the pixel mode here. All Combinations of R, G and B useable.
output.pixel.mode=GRB

#=========================
# ARTNET SETTINGS
#=========================
# Define the number of artnet nodes you use. 
artnet.nodes=2

# Node settings: add the artnet node number to the settings to set 
# things up for every node, e.g. artnet.ip.1=127.0.0.1 for node 2
# Begin to count with 0 for first node!
# Artnet limitations: every univers (exept the last one of the last node)
# must have the given number of pixels. Only sending on subnet 0

# Define node ip
artnet.ip.0=192.168.106.227
# Define how many rgb pixels are used on a universe, maximal 170 (=510 Channels)
artnet.pixels.per.universe.0=81
# Define the first universe id
artnet.first.universe.id.0=0
# Define the number of universes per node
artnet.universes.per.node.0=1
# Define how many subnets are used per universe
artnet.subnet.per.universe.0=1

artnet.ip.1=192.168.1.91
artnet.pixels.per.universe.1=81
artnet.first.universe.id.1=0
artnet.universes.per.node.1=1
artnet.subnet.per.universe.1=1